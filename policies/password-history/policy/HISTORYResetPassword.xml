<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<TrustFrameworkPolicy xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns="http://schemas.microsoft.com/online/cpim/schemas/2013/06" PolicySchemaVersion="0.3.0.0" TenantId="your-tenant.onmicrosoft.com" PolicyId="B2C_1A_HISTORYResetPassword" PublicPolicyUri="http://your-tenant.onmicrosoft.com/B2C_1A_HISTORYResetPassword">

    <BasePolicy>
        <TenantId>your-tenant.onmicrosoft.com</TenantId>
        <PolicyId>B2C_1A_TrustFrameworkExtensions</PolicyId>
    </BasePolicy>

    <BuildingBlocks>
        <ClaimsSchema>
            <ClaimType Id="IsPasswordValid">
                <DisplayName>password is valid</DisplayName>
                <DataType>boolean</DataType>
                <UserHelpText>password is not one of past 5 passwords</UserHelpText>
            </ClaimType>
            <ClaimType Id="userPassHash">
                <DisplayName>request JSON body for user password hash info</DisplayName>
                <DataType>string</DataType>
                <UserHelpText>request JSON body for user password hash info</UserHelpText>
            </ClaimType>
            <ClaimType Id="hashedPassword">
                <DisplayName>Hashed password</DisplayName>
                <DataType>string</DataType>
            </ClaimType>
        </ClaimsSchema>

        <ClaimsTransformations>
            <ClaimsTransformation Id="HashPasswordWithEmail" TransformationMethod="Hash">
                <InputClaims>
                    <InputClaim ClaimTypeReferenceId="newPassword" TransformationClaimType="plaintext" />
                    <InputClaim ClaimTypeReferenceId="email" TransformationClaimType="salt" />
                </InputClaims>
                <InputParameters>
                    <InputParameter Id="randomizerSecret" DataType="string" Value="B2C_1A_AccountTransformSecret" />
                </InputParameters>
                <OutputClaims>
                    <OutputClaim ClaimTypeReferenceId="hashedPassword" TransformationClaimType="hash" />
                </OutputClaims>
            </ClaimsTransformation>

            <ClaimsTransformation Id="GeneratePassHashBody" TransformationMethod="GenerateJson">
                <InputClaims>
                    <InputClaim ClaimTypeReferenceId="objectid" TransformationClaimType="username" />
                    <InputClaim ClaimTypeReferenceId="hashedPassword" TransformationClaimType="hash" />
                </InputClaims>
                <OutputClaims>
                    <OutputClaim ClaimTypeReferenceId="userPassHash" TransformationClaimType="outputClaim"/>
                </OutputClaims>
            </ClaimsTransformation>
        </ClaimsTransformations>
    </BuildingBlocks>

    <ClaimsProviders>
        <ClaimsProvider>
            <DisplayName>Password reset overrides</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="LocalAccountDiscoveryUsingEmailAddress">
                    <Metadata>
                        <Item Key="EnforceEmailVerification">false</Item>
                    </Metadata>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <ClaimsProvider>
            <DisplayName>Technical Profiles For Checking Password History</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="REST-PasswordHistoryCheck">
                    <DisplayName>Validate that new password is not one of past 5 passwords</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.RestfulProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"></Protocol>
                    <Metadata>
                        <!--Sample: update the ServiceUrl with the Url to your password hash service, e.g. passhash.azurewebsites.net -->
                        <Item Key="ServiceUrl">https://                                                                                    <!--Sample action required: your password hash service location-->/passhash</Item>
                        <Item Key="AuthenticationType">None</Item>
                        <Item Key="AllowInsecureAuthInProduction">true</Item>
                        <Item Key="SendClaimsIn">Body</Item>
                        <Item Key="ClaimUsedForRequestPayload">userPassHash</Item>
                        <Item Key="DefaultUserMessageIfRequestFailed">Cannot process your request right now, please try again later.</Item>
                    </Metadata>
                    <InputClaimsTransformations>
                        <InputClaimsTransformation ReferenceId="HashPasswordWithEmail" />
                        <InputClaimsTransformation ReferenceId="GeneratePassHashBody" />
                    </InputClaimsTransformations>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="userPassHash" />
                    </InputClaims>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>

        <ClaimsProvider>
            <DisplayName>AAD Overrides</DisplayName>
            <TechnicalProfiles>
                <TechnicalProfile Id="LocalAccountWritePasswordUsingObjectId-ForHistory">
                    <DisplayName>Change password (username)</DisplayName>
                    <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
                    <Metadata>
                        <Item Key="ContentDefinitionReferenceId">api.localaccountpasswordreset</Item>
                    </Metadata>
                    <CryptographicKeys>
                        <Key Id="issuer_secret" StorageReferenceId="B2C_1A_TokenSigningKeyContainer" />
                    </CryptographicKeys>
                    <InputClaims>
                        <InputClaim ClaimTypeReferenceId="objectId" />

                    </InputClaims>
                    <OutputClaims>
                        <OutputClaim ClaimTypeReferenceId="newPassword" Required="true" />
                        <OutputClaim ClaimTypeReferenceId="reenterPassword" Required="true" />
                        <OutputClaim ClaimTypeReferenceId="IsPasswordValid" DefaultValue="true" />
                    </OutputClaims>
                    <ValidationTechnicalProfiles>
                        <ValidationTechnicalProfile ReferenceId="REST-PasswordHistoryCheck" />
                        <ValidationTechnicalProfile ReferenceId="AAD-UserWritePasswordUsingObjectId" />
                    </ValidationTechnicalProfiles>
                </TechnicalProfile>
            </TechnicalProfiles>
        </ClaimsProvider>
    </ClaimsProviders>

    <UserJourneys>
        <UserJourney Id="PasswordResetWithHistoryCheck">
            <OrchestrationSteps>
                <OrchestrationStep Order="1" Type="ClaimsExchange">
                    <ClaimsExchanges>
                        <ClaimsExchange Id="PasswordResetUsingEmailAddressExchange" TechnicalProfileReferenceId="LocalAccountDiscoveryUsingEmailAddress" />
                    </ClaimsExchanges>
                </OrchestrationStep>
                <OrchestrationStep Order="2" Type="ClaimsExchange">
                    <ClaimsExchanges>
                        <ClaimsExchange Id="NewCredentials" TechnicalProfileReferenceId="LocalAccountWritePasswordUsingObjectId-ForHistory" />
                    </ClaimsExchanges>
                </OrchestrationStep>
                <OrchestrationStep Order="3" Type="SendClaims" CpimIssuerTechnicalProfileReferenceId="JwtIssuer" />
            </OrchestrationSteps>
            <ClientDefinition ReferenceId="DefaultWeb" />
        </UserJourney>
    </UserJourneys>

    <RelyingParty>
        <DefaultUserJourney ReferenceId="PasswordResetWithHistoryCheck" />
        <TechnicalProfile Id="PolicyProfile">
            <DisplayName>PolicyProfile</DisplayName>
            <Protocol Name="OpenIdConnect" />
            <OutputClaims>
                <OutputClaim ClaimTypeReferenceId="email" />
                <OutputClaim ClaimTypeReferenceId="objectId" PartnerClaimType="sub"/>
                <OutputClaim ClaimTypeReferenceId="tenantId" AlwaysUseDefaultValue="true" DefaultValue="{Policy:TenantObjectId}" />
                <OutputClaim ClaimTypeReferenceId="IsPasswordValid" />
            </OutputClaims>
            <SubjectNamingInfo ClaimType="sub" />
        </TechnicalProfile>
    </RelyingParty>
</TrustFrameworkPolicy>